Release 14.7 - xst P.20131013 (nt64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.24 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.24 secs
 
--> Reading design: matrix_multiplier.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "matrix_multiplier.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "matrix_multiplier"
Output Format                      : NGC
Target Device                      : xc6slx150-3-fgg484

---- Source Options
Top Module Name                    : matrix_multiplier
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 16
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" into library work
Parsing module <single_multiplier>.
Analyzing Verilog file "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\mux.v" into library work
Parsing module <mux>.
Analyzing Verilog file "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\adder.v" into library work
Parsing module <adder>.
Analyzing Verilog file "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\matrix_multiplier.v" into library work
Parsing module <matrix_multiplier>.
WARNING:HDLCompiler:248 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\matrix_multiplier.v" Line 92: Block identifier is required on this block
WARNING:HDLCompiler:248 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\matrix_multiplier.v" Line 91: Block identifier is required on this block
WARNING:HDLCompiler:248 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\matrix_multiplier.v" Line 98: Block identifier is required on this block
WARNING:HDLCompiler:248 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\matrix_multiplier.v" Line 109: Block identifier is required on this block
WARNING:HDLCompiler:248 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\matrix_multiplier.v" Line 121: Block identifier is required on this block
WARNING:HDLCompiler:248 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\matrix_multiplier.v" Line 120: Block identifier is required on this block

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating module <matrix_multiplier>.

Elaborating module <mux(WIDTH=32,NUM_INPUTS=2)>.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\mux.v" Line 37: Result of 64-bit expression is truncated to fit in 32-bit target.

Elaborating module <single_multiplier>.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 88: Result of 32-bit expression is truncated to fit in 10-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 89: Result of 32-bit expression is truncated to fit in 10-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 165: Result of 32-bit expression is truncated to fit in 10-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 175: Result of 32-bit expression is truncated to fit in 10-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 182: Result of 12-bit expression is truncated to fit in 10-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 199: Result of 32-bit expression is truncated to fit in 10-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 212: Result of 11-bit expression is truncated to fit in 10-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 225: Result of 25-bit expression is truncated to fit in 24-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 227: Result of 11-bit expression is truncated to fit in 10-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v" Line 236: Result of 9-bit expression is truncated to fit in 8-bit target.

Elaborating module <adder>.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\adder.v" Line 162: Result of 32-bit expression is truncated to fit in 8-bit target.
WARNING:HDLCompiler:413 - "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\matrix_multiplier.v" Line 250: Result of 3-bit expression is truncated to fit in 2-bit target.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <matrix_multiplier>.
    Related source file is "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\matrix_multiplier.v".
        NUM_FIRST_ROW = 2
        NUM_FIRST_COL = 2
        NUM_SECOND_COL = 2
    Found 1-bit register for signal <rst_mult>.
    Found 128-bit register for signal <In1_Copy>.
    Found 128-bit register for signal <In2_Copy>.
    Found 128-bit register for signal <Out>.
    Found 2-bit register for signal <select_signal>.
    Found 3-bit register for signal <state>.
    Found 1-bit register for signal <reset_adder>.
    Found 1-bit register for signal <output_ack>.
    Found 1-bit register for signal <res_ack>.
    Found 1-bit register for signal <in1_stb>.
    Found 1-bit register for signal <in2_stb>.
    Found 1-bit register for signal <load_input>.
    Found finite state machine <FSM_0> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 7                                              |
    | Transitions        | 26                                             |
    | Inputs             | 19                                             |
    | Outputs            | 6                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (negative)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | 000                                            |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 2-bit adder for signal <select_signal[1]_GND_1_o_add_15_OUT> created at line 250.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred 393 D-type flip-flop(s).
	inferred   8 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <matrix_multiplier> synthesized.

Synthesizing Unit <mux>.
    Related source file is "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\mux.v".
        WIDTH = 32
        NUM_INPUTS = 2
    Found 3-bit subtractor for signal <GND_2_o_GND_2_o_sub_1_OUT> created at line 37.
    Found 64-bit shifter logical right for signal <n0004> created at line 37
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred   1 Multiplexer(s).
	inferred   1 Combinational logic shifter(s).
Unit <mux> synthesized.

Synthesizing Unit <single_multiplier>.
    Related source file is "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\single_multiplier.v".
        get_a = 4'b0000
        get_b = 4'b0001
        unpack = 4'b0010
        special_cases = 4'b0011
        normalise_a = 4'b0100
        normalise_b = 4'b0101
        multiply_0 = 4'b0110
        multiply_1 = 4'b0111
        normalise_1 = 4'b1000
        normalise_2 = 4'b1001
        round = 4'b1010
        pack = 4'b1011
        put_z = 4'b1100
    Found 32-bit register for signal <s_output_z>.
    Found 4-bit register for signal <state>.
    Found 32-bit register for signal <z>.
    Found 24-bit register for signal <z_m>.
    Found 10-bit register for signal <z_e>.
    Found 1-bit register for signal <guard>.
    Found 1-bit register for signal <round_bit>.
    Found 1-bit register for signal <sticky>.
    Found 1-bit register for signal <z_s>.
    Found 50-bit register for signal <product>.
    Found 24-bit register for signal <b_m>.
    Found 10-bit register for signal <b_e>.
    Found 24-bit register for signal <a_m>.
    Found 10-bit register for signal <a_e>.
    Found 1-bit register for signal <a_s>.
    Found 1-bit register for signal <b_s>.
    Found 1-bit register for signal <s_input_b_ack>.
    Found 32-bit register for signal <b>.
    Found 1-bit register for signal <s_input_a_ack>.
    Found 32-bit register for signal <a>.
    Found 1-bit register for signal <s_output_z_stb>.
    Found finite state machine <FSM_1> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 13                                             |
    | Transitions        | 31                                             |
    | Inputs             | 17                                             |
    | Outputs            | 4                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | synchronous                                    |
    | Reset State        | 0000                                           |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 9-bit subtractor for signal <GND_4_o_GND_4_o_sub_6_OUT> created at line 88.
    Found 9-bit subtractor for signal <GND_4_o_GND_4_o_sub_7_OUT> created at line 89.
    Found 11-bit adder for signal <n0319> created at line 182.
    Found 11-bit adder for signal <n0249> created at line 182.
    Found 24-bit adder for signal <z_m[23]_GND_4_o_add_69_OUT> created at line 225.
    Found 10-bit adder for signal <z_e[9]_GND_4_o_add_71_OUT> created at line 227.
    Found 8-bit adder for signal <z_e[7]_GND_4_o_add_75_OUT> created at line 236.
    Found 10-bit subtractor for signal <GND_4_o_GND_4_o_sub_48_OUT<9:0>> created at line 165.
    Found 10-bit subtractor for signal <GND_4_o_GND_4_o_sub_52_OUT<9:0>> created at line 175.
    Found 10-bit subtractor for signal <GND_4_o_GND_4_o_sub_61_OUT<9:0>> created at line 199.
    Found 24x24-bit multiplier for signal <a_m[23]_b_m[23]_MuLt_57_OUT> created at line 183.
    Found 32-bit comparator greater for signal <PWR_4_o_z_e[9]_LessThan_65_o> created at line 211
    Found 32-bit comparator greater for signal <z_e[9]_GND_4_o_LessThan_79_o> created at line 242
    Summary:
	inferred   1 Multiplier(s).
	inferred   9 Adder/Subtractor(s).
	inferred 289 D-type flip-flop(s).
	inferred   2 Comparator(s).
	inferred  75 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <single_multiplier> synthesized.

Synthesizing Unit <adder>.
    Related source file is "C:\Users\Sajjad\projects\Fall 99\DSD\dsdproject\FloatingMatrixMultiplier\adder.v".
    Found 2-bit register for signal <state>.
    Found 32-bit register for signal <number1_copy>.
    Found 32-bit register for signal <number2_copy>.
    Found 1-bit register for signal <start>.
    Found 1-bit register for signal <result_ready>.
    Found finite state machine <FSM_2> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 3                                              |
    | Transitions        | 5                                              |
    | Inputs             | 2                                              |
    | Outputs            | 3                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | reset (negative)                               |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 9-bit subtractor for signal <GND_6_o_GND_6_o_sub_3_OUT> created at line 67.
    Found 9-bit subtractor for signal <GND_6_o_GND_6_o_sub_4_OUT> created at line 74.
    Found 24-bit subtractor for signal <GND_6_o_GND_6_o_sub_24_OUT> created at line 131.
    Found 24-bit adder for signal <n0176> created at line 129.
    Found 32-bit adder for signal <n0153> created at line 162.
    Found 23-bit shifter logical right for signal <PWR_7_o_GND_6_o_shift_right_12_OUT> created at line 93
    Found 24-bit shifter logical left for signal <n0154> created at line 164
WARNING:Xst:737 - Found 1-bit latch for signal <renorm_shift_80<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <renorm_shift_80<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <renorm_shift_80<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <renorm_shift_80<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <renorm_exp_80<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <renorm_exp_80<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Found 23-bit comparator greater for signal <number1_copy[22]_number2_copy[22]_LessThan_17_o> created at line 111
    Found 1-bit comparator equal for signal <number1_copy[31]_number2_copy[31]_equal_22_o> created at line 128
    Found 8-bit comparator greater for signal <number2_copy[30]_number1_copy[30]_LessThan_2_o> created at line 173
    Found 8-bit comparator greater for signal <number1_copy[30]_number2_copy[30]_LessThan_41_o> created at line 175
    Found 23-bit comparator greater for signal <number2_copy[22]_number1_copy[22]_LessThan_42_o> created at line 180
    Summary:
	inferred   4 Adder/Subtractor(s).
	inferred  66 D-type flip-flop(s).
	inferred   6 Latch(s).
	inferred   5 Comparator(s).
	inferred  37 Multiplexer(s).
	inferred   2 Combinational logic shifter(s).
	inferred   1 Finite State Machine(s).
Unit <adder> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# Multipliers                                          : 4
 24x24-bit multiplier                                  : 4
# Adders/Subtractors                                   : 57
 10-bit addsub                                         : 4
 10-bit subtractor                                     : 8
 11-bit adder                                          : 8
 2-bit adder                                           : 1
 24-bit adder                                          : 4
 24-bit addsub                                         : 4
 3-bit subtractor                                      : 4
 32-bit adder                                          : 4
 8-bit adder                                           : 4
 9-bit subtractor                                      : 16
# Registers                                            : 103
 1-bit register                                        : 43
 10-bit register                                       : 12
 128-bit register                                      : 3
 2-bit register                                        : 5
 24-bit register                                       : 12
 32-bit register                                       : 24
 50-bit register                                       : 4
# Latches                                              : 24
 1-bit latch                                           : 24
# Comparators                                          : 28
 1-bit comparator equal                                : 4
 23-bit comparator greater                             : 8
 32-bit comparator greater                             : 8
 8-bit comparator greater                              : 8
# Multiplexers                                         : 460
 1-bit 2-to-1 multiplexer                              : 292
 10-bit 2-to-1 multiplexer                             : 20
 128-bit 2-to-1 multiplexer                            : 3
 2-bit 2-to-1 multiplexer                              : 1
 23-bit 2-to-1 multiplexer                             : 28
 24-bit 2-to-1 multiplexer                             : 32
 32-bit 2-to-1 multiplexer                             : 56
 4-bit 2-to-1 multiplexer                              : 20
 64-bit 2-to-1 multiplexer                             : 4
 8-bit 2-to-1 multiplexer                              : 4
# Logic shifters                                       : 12
 23-bit shifter logical right                          : 4
 24-bit shifter logical left                           : 4
 64-bit shifter logical right                          : 4
# FSMs                                                 : 9
# Xors                                                 : 4
 1-bit xor2                                            : 4

=========================================================================
INFO:Xst:1767 - HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

INFO:Xst:2261 - The FF/Latch <product_0> in Unit <[1].[1].multiplier_i> is equivalent to the following FF/Latch, which will be removed : <product_1> 
INFO:Xst:2261 - The FF/Latch <product_0> in Unit <[1].[2].multiplier_i> is equivalent to the following FF/Latch, which will be removed : <product_1> 
INFO:Xst:2261 - The FF/Latch <product_0> in Unit <[2].[1].multiplier_i> is equivalent to the following FF/Latch, which will be removed : <product_1> 
INFO:Xst:2261 - The FF/Latch <product_0> in Unit <[2].[2].multiplier_i> is equivalent to the following FF/Latch, which will be removed : <product_1> 
WARNING:Xst:1710 - FF/Latch <product_0> (without init value) has a constant value of 0 in block <[1].[1].multiplier_i>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <renorm_shift_80_3> (without init value) has a constant value of 0 in block <[1].[1].adder_i>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <product_0> (without init value) has a constant value of 0 in block <[1].[2].multiplier_i>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <renorm_shift_80_3> (without init value) has a constant value of 0 in block <[1].[2].adder_i>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <product_0> (without init value) has a constant value of 0 in block <[2].[1].multiplier_i>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <renorm_shift_80_3> (without init value) has a constant value of 0 in block <[2].[1].adder_i>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <product_0> (without init value) has a constant value of 0 in block <[2].[2].multiplier_i>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <renorm_shift_80_3> (without init value) has a constant value of 0 in block <[2].[2].adder_i>. This FF/Latch will be trimmed during the optimization process.

Synthesizing (advanced) Unit <matrix_multiplier>.
The following registers are absorbed into counter <select_signal>: 1 register on signal <select_signal>.
Unit <matrix_multiplier> synthesized (advanced).

Synthesizing (advanced) Unit <single_multiplier>.
The following registers are absorbed into counter <z_e>: 1 register on signal <z_e>.
The following registers are absorbed into counter <b_e>: 1 register on signal <b_e>.
The following registers are absorbed into counter <a_e>: 1 register on signal <a_e>.
	Found pipelined multiplier on signal <a_m[23]_b_m[23]_MuLt_57_OUT>:INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier Mmult_a_m[23]_b_m[23]_MuLt_57_OUT by adding 7 register level(s).
Unit <single_multiplier> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# Multipliers                                          : 4
 24x24-bit multiplier                                  : 4
# Adders/Subtractors                                   : 40
 10-bit adder carry in                                 : 4
 24-bit adder                                          : 4
 24-bit addsub                                         : 4
 3-bit subtractor                                      : 4
 8-bit adder                                           : 8
 9-bit subtractor                                      : 16
# Counters                                             : 13
 10-bit down counter                                   : 8
 10-bit updown counter                                 : 4
 2-bit up counter                                      : 1
# Registers                                            : 1691
 Flip-Flops                                            : 1691
# Comparators                                          : 28
 1-bit comparator equal                                : 4
 23-bit comparator greater                             : 8
 32-bit comparator greater                             : 8
 8-bit comparator greater                              : 8
# Multiplexers                                         : 447
 1-bit 2-to-1 multiplexer                              : 292
 10-bit 2-to-1 multiplexer                             : 8
 128-bit 2-to-1 multiplexer                            : 3
 23-bit 2-to-1 multiplexer                             : 28
 24-bit 2-to-1 multiplexer                             : 32
 32-bit 2-to-1 multiplexer                             : 56
 4-bit 2-to-1 multiplexer                              : 20
 64-bit 2-to-1 multiplexer                             : 4
 8-bit 2-to-1 multiplexer                              : 4
# Logic shifters                                       : 12
 23-bit shifter logical right                          : 4
 24-bit shifter logical left                           : 4
 64-bit shifter logical right                          : 4
# FSMs                                                 : 9
# Xors                                                 : 4
 1-bit xor2                                            : 4

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
WARNING:Xst:1710 - FF/Latch <product_0> (without init value) has a constant value of 0 in block <single_multiplier>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1895 - Due to other FF/Latch trimming, FF/Latch <product_1> (without init value) has a constant value of 0 in block <single_multiplier>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <renorm_shift_80_3> (without init value) has a constant value of 0 in block <adder>. This FF/Latch will be trimmed during the optimization process.
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <FSM_0> on signal <state[1:3]> with gray encoding.
-------------------
 State | Encoding
-------------------
 000   | 000
 001   | 001
 010   | 011
 011   | 010
 100   | 110
 101   | 111
 110   | 101
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <[1].[1].multiplier_i/FSM_1> on signal <state[1:4]> with user encoding.
Optimizing FSM <[1].[2].multiplier_i/FSM_1> on signal <state[1:4]> with user encoding.
Optimizing FSM <[2].[1].multiplier_i/FSM_1> on signal <state[1:4]> with user encoding.
Optimizing FSM <[2].[2].multiplier_i/FSM_1> on signal <state[1:4]> with user encoding.
-------------------
 State | Encoding
-------------------
 0000  | 0000
 0001  | 0001
 0010  | 0010
 0011  | 0011
 0100  | 0100
 1100  | 1100
 0101  | 0101
 0110  | 0110
 0111  | 0111
 1000  | 1000
 1001  | 1001
 1010  | 1010
 1011  | 1011
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <[1].[1].adder_i/FSM_2> on signal <state[1:2]> with user encoding.
Optimizing FSM <[1].[2].adder_i/FSM_2> on signal <state[1:2]> with user encoding.
Optimizing FSM <[2].[1].adder_i/FSM_2> on signal <state[1:2]> with user encoding.
Optimizing FSM <[2].[2].adder_i/FSM_2> on signal <state[1:2]> with user encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 10
-------------------
WARNING:Xst:3002 - This design contains one or more registers/latches that are directly
   incompatible with the Spartan6 architecture. The two primary causes of this is
   either a register or latch described with both an asynchronous set and
   asynchronous reset, or a register or latch described with an asynchronous
   set or reset which however has an initialization value of the opposite 
   polarity (i.e. asynchronous reset with an initialization value of 1).
    While this circuit can be built, it creates a sub-optimal implementation
   in terms of area, power and performance. For a more optimal implementation
   Xilinx highly recommends one of the following:

          1) Remove either the set or reset from all registers and latches
             if not needed for required functionality
          2) Modify the code in order to produce a synchronous set
             and/or reset (both is preferred)
          3) Ensure all registers have the same initialization value as the
             described asynchronous set or reset polarity
          4) Use the -async_to_sync option to transform the asynchronous
             set/reset to synchronous operation
             (timing simulation highly recommended when using this option)

  Please refer to http://www.xilinx.com search string "Spartan6 asynchronous set/reset" for more details.

  List of register instances with asynchronous set or reset and opposite initialization value:
    rst_mult in unit <matrix_multiplier>


Optimizing unit <matrix_multiplier> ...

Optimizing unit <single_multiplier> ...

Optimizing unit <adder> ...
WARNING:Xst:1710 - FF/Latch <select_signal_1> (without init value) has a constant value of 0 in block <matrix_multiplier>. This FF/Latch will be trimmed during the optimization process.
INFO:Xst:2261 - The FF/Latch <[1].[2].adder_i/start> in Unit <matrix_multiplier> is equivalent to the following FF/Latch, which will be removed : <[1].[2].adder_i/state_FSM_FFd1> 
INFO:Xst:2261 - The FF/Latch <[2].[1].adder_i/start> in Unit <matrix_multiplier> is equivalent to the following FF/Latch, which will be removed : <[2].[1].adder_i/state_FSM_FFd1> 
INFO:Xst:2261 - The FF/Latch <[1].[1].adder_i/start> in Unit <matrix_multiplier> is equivalent to the following FF/Latch, which will be removed : <[1].[1].adder_i/state_FSM_FFd1> 
INFO:Xst:2261 - The FF/Latch <[2].[2].adder_i/start> in Unit <matrix_multiplier> is equivalent to the following FF/Latch, which will be removed : <[2].[2].adder_i/state_FSM_FFd1> 

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block matrix_multiplier, actual ratio is 4.
WARNING:Xst:1426 - The value init of the FF/Latch rst_mult_LD hinder the constant cleaning in the block matrix_multiplier.
   You should achieve better results by setting this init to 1.

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 1772
 Flip-Flops                                            : 1772

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : matrix_multiplier.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 4179
#      GND                         : 1
#      INV                         : 11
#      LUT1                        : 92
#      LUT2                        : 399
#      LUT3                        : 561
#      LUT4                        : 431
#      LUT5                        : 686
#      LUT6                        : 914
#      MULT_AND                    : 36
#      MUXCY                       : 512
#      MUXF7                       : 79
#      VCC                         : 1
#      XORCY                       : 456
# FlipFlops/Latches                : 1793
#      FD                          : 10
#      FDC                         : 17
#      FDCE                        : 640
#      FDE                         : 1076
#      FDP                         : 1
#      FDR                         : 28
#      LD                          : 1
#      LDE                         : 20
# Clock Buffers                    : 2
#      BUFG                        : 1
#      BUFGP                       : 1
# IO Buffers                       : 388
#      IBUF                        : 259
#      OBUF                        : 129
# DSPs                             : 16
#      DSP48A1                     : 16

Device utilization summary:
---------------------------

Selected Device : 6slx150fgg484-3 


Slice Logic Utilization: 
 Number of Slice Registers:            1793  out of  184304     0%  
 Number of Slice LUTs:                 3094  out of  92152     3%  
    Number used as Logic:              3094  out of  92152     3%  

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:   3710
   Number with an unused Flip Flop:    1917  out of   3710    51%  
   Number with an unused LUT:           616  out of   3710    16%  
   Number of fully used LUT-FF pairs:  1177  out of   3710    31%  
   Number of unique control sets:        67

IO Utilization: 
 Number of IOs:                         389
 Number of bonded IOBs:                 389  out of    338   115% (*) 

Specific Feature Utilization:
 Number of BUFG/BUFGCTRLs:                2  out of     16    12%  
 Number of DSP48A1s:                     16  out of    180     8%  

WARNING:Xst:1336 -  (*) More than 100% of Device resources are used

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+--------------------------------------+-------+
Clock Signal                       | Clock buffer(FF name)                | Load  |
-----------------------------------+--------------------------------------+-------+
clk                                | BUFGP                                | 1788  |
[2].[2].adder_i/start              | NONE([2].[2].adder_i/renorm_exp_80_1)| 5     |
[2].[1].adder_i/start              | NONE([2].[1].adder_i/renorm_exp_80_1)| 5     |
[1].[2].adder_i/start              | NONE([1].[2].adder_i/renorm_exp_80_1)| 5     |
[1].[1].adder_i/start              | NONE([1].[1].adder_i/renorm_exp_80_1)| 5     |
rst                                | IBUF+BUFG                            | 1     |
-----------------------------------+--------------------------------------+-------+
INFO:Xst:2169 - HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -3

   Minimum period: 19.062ns (Maximum Frequency: 52.460MHz)
   Minimum input arrival time before clock: 4.765ns
   Maximum output required time after clock: 3.634ns
   Maximum combinational path delay: No path found

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 19.062ns (frequency: 52.460MHz)
  Total number of paths / destination ports: 4740394481 / 4292
-------------------------------------------------------------------------
Delay:               19.062ns (Levels of Logic = 50)
  Source:            [2].[2].adder_i/number2_copy_24 (FF)
  Destination:       out_matrix_2_2_10 (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: [2].[2].adder_i/number2_copy_24 to out_matrix_2_2_10
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDCE:C->Q             7   0.447   1.138  [2].[2].adder_i/number2_copy_24 ([2].[2].adder_i/number2_copy_24)
     LUT6:I0->O            1   0.203   0.579  [2].[2].adder_i/number2_copy[30]_number1_copy[30]_LessThan_2_o3 ([2].[2].adder_i/number2_copy[30]_number1_copy[30]_LessThan_2_o1)
     MUXF7:S->O            3   0.148   0.651  [2].[2].adder_i/number2_copy[30]_number1_copy[30]_LessThan_2_o1 ([2].[2].adder_i/number2_copy[30]_number1_copy[30]_LessThan_2_o2)
     LUT5:I4->O            5   0.205   0.715  [2].[2].adder_i/number2_copy[30]_number1_copy[30]_LessThan_2_o21_1 ([2].[2].adder_i/number2_copy[30]_number1_copy[30]_LessThan_2_o21)
     LUT5:I4->O            8   0.205   0.803  [2].[2].adder_i/Mmux_GND_6_o_GND_6_o_mux_10_OUT121_1 ([2].[2].adder_i/Mmux_GND_6_o_GND_6_o_mux_10_OUT121)
     LUT6:I5->O            2   0.205   0.864  [2].[2].adder_i/Sh3101 ([2].[2].adder_i/Sh310)
     LUT6:I2->O            2   0.203   0.617  [2].[2].adder_i/Sh2311 ([2].[2].adder_i/Sh231)
     LUT4:I3->O            1   0.205   0.684  [2].[2].adder_i/Mmux_number1_copy[22]_PWR_7_o_mux_13_OUT17 ([2].[2].adder_i/Mmux_number1_copy[22]_PWR_7_o_mux_13_OUT110)
     LUT6:I4->O            1   0.203   0.580  [2].[2].adder_i/Mmux_number1_copy[22]_PWR_7_o_mux_13_OUT18_SW0 (N484)
     LUT6:I5->O            5   0.205   0.943  [2].[2].adder_i/Mmux_number1_copy[22]_PWR_7_o_mux_13_OUT18 ([2].[2].adder_i/number1_copy[22]_PWR_7_o_mux_13_OUT<0>)
     LUT4:I1->O            1   0.205   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_lut<0> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_lut<0>)
     MUXCY:S->O            1   0.172   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<0> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<0>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<1> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<1>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<2> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<2>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<3> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<3>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<4> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<4>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<5> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<5>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<6> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<6>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<7> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<7>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<8> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<8>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<9> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<9>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<10> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<10>)
     MUXCY:CI->O          44   0.213   1.463  [2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<11> ([2].[2].adder_i/Mcompar_number1_copy[22]_number2_copy[22]_LessThan_17_o_cy<11>)
     LUT3:I2->O            1   0.205   0.579  [2].[2].adder_i/Mmux_number1_copy[22]_number2_copy[22]_mux_18_OUT1210 ([2].[2].adder_i/number1_copy[22]_number2_copy[22]_mux_18_OUT<1>)
     MUXCY:DI->O           1   0.145   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<1> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<1>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<2> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<2>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<3> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<3>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<4> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<4>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<5> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<5>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<6> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<6>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<7> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<7>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<8> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<8>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<9> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<9>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<10> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<10>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<11> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<11>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<12> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<12>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<13> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<13>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<14> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<14>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<15> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<15>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<16> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<16>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<17> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<17>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<18> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<18>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<19> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<19>)
     MUXCY:CI->O           1   0.019   0.000  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<20> ([2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_cy<20>)
     XORCY:CI->O           1   0.180   0.580  [2].[2].adder_i/Maddsub_GND_6_o_BUS_0001_mux_24_OUT_xor<21> ([2].[2].adder_i/GND_6_o_BUS_0001_mux_24_OUT<21>)
     LUT6:I5->O           14   0.205   1.186  [2].[2].adder_i/Mmux_GND_6_o_GND_6_o_mux_25_OUT141 ([2].[2].adder_i/GND_6_o_GND_6_o_mux_25_OUT<21>)
     LUT6:I3->O           12   0.205   1.253  [2].[2].adder_i/Mmux_n0189161_1 ([2].[2].adder_i/Mmux_n0189161)
     LUT6:I1->O            1   0.203   0.000  [2].[2].adder_i/Sh7611_G (N677)
     MUXF7:I1->O           4   0.140   0.684  [2].[2].adder_i/Sh7611 ([2].[2].adder_i/Sh761)
     LUT6:I5->O            1   0.205   0.580  Mmux_state[2]_out_matrix[1][1][31]_wide_mux_31_OUT121 (Mmux_state[2]_out_matrix[1][1][31]_wide_mux_31_OUT12)
     LUT3:I2->O            1   0.205   0.000  Mmux_state[2]_out_matrix[1][1][31]_wide_mux_31_OUT122 (state[2]_out_matrix[1][1][31]_wide_mux_31_OUT<10>)
     FDCE:D                    0.102          out_matrix_2_2_10
    ----------------------------------------
    Total                     19.062ns (5.165ns logic, 13.897ns route)
                                       (27.1% logic, 72.9% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 1055 / 1040
-------------------------------------------------------------------------
Offset:              4.765ns (Levels of Logic = 2)
  Source:            rst (PAD)
  Destination:       In1_Copy_0 (FF)
  Destination Clock: clk rising

  Data Path: rst to In1_Copy_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O             9   1.222   0.829  rst_IBUF (rst_IBUF)
     INV:I->O            390   0.206   2.078  rst_IBUF_BUFG_LUT1_INV_0 (rst_IBUF_BUFG_LUT1)
     FDCE:CLR                  0.430          out_matrix_2_2_0
    ----------------------------------------
    Total                      4.765ns (1.858ns logic, 2.907ns route)
                                       (39.0% logic, 61.0% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 128 / 128
-------------------------------------------------------------------------
Offset:              3.634ns (Levels of Logic = 1)
  Source:            out_matrix_2_2_127 (FF)
  Destination:       Out<127> (PAD)
  Source Clock:      clk rising

  Data Path: out_matrix_2_2_127 to Out<127>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDCE:C->Q             2   0.447   0.616  out_matrix_2_2_127 (out_matrix_2_2_127)
     OBUF:I->O                 2.571          Out_127_OBUF (Out<127>)
    ----------------------------------------
    Total                      3.634ns (3.018ns logic, 0.616ns route)
                                       (83.0% logic, 17.0% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock [1].[1].adder_i/start
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |   16.801|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock [1].[2].adder_i/start
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |   16.801|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock [2].[1].adder_i/start
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |   16.801|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock [2].[2].adder_i/start
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |   16.888|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock clk
---------------------+---------+---------+---------+---------+
                     | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock         |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------------+---------+---------+---------+---------+
[1].[1].adder_i/start|         |    5.053|         |         |
[1].[2].adder_i/start|         |    5.053|         |         |
[2].[1].adder_i/start|         |    5.053|         |         |
[2].[2].adder_i/start|         |    5.053|         |         |
clk                  |   19.062|         |         |         |
rst                  |    3.213|         |         |         |
---------------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 22.00 secs
Total CPU time to Xst completion: 22.62 secs
 
--> 

Total memory usage is 4543192 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :   40 (   0 filtered)
Number of infos    :   11 (   0 filtered)

